{"version":3,"sources":["components/card/Card.component.jsx","components/card-list/card-list.component.jsx","components/Search-box/Search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","Searchbox","placeholder","handleChange","type","onChange","App","event","setState","searchField","target","value","state","fetch","then","response","json","users","catch","err","console","error","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAAAC,GAChB,OAAQ,sBAAKC,UAAU,iBAAf,UACJ,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHbC,EAAW,SAAAR,GAEpB,OAAQ,qBAAKC,UAAU,YAAf,SAEAD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLhDM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OACI,uBAAOZ,UAAU,SAASa,KAAK,OAAOF,YAAaA,EAAaG,SAAUF,MCwCnEG,E,kDAvCb,aAAe,IAAD,8BACZ,gBAiBFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAhB1C,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,qDAWd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,OACxCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,Q,oBAQhC,WAAU,IAAD,EAC2BG,KAAKV,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZc,EAAmBxB,EAASyB,QAAO,SAAA9B,GAAO,OAAIA,EAAQE,KAAK6B,cAAcC,SAASjB,EAAYkB,wBACpG,OACE,sBAAKpC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAcmB,KAAKnB,eAC5D,cAAC,EAAD,CAAUJ,SAAUwB,W,GA/BVK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f34c03b9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.styles.css';\r\n\r\nexport const Card = props => {\r\n    return (<div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}/set=set2&size=180x180`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div >)\r\n}","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/Card.component'\r\n\r\nexport const CardList = props => {\r\n\r\n    return (<div className=\"card-list\">\r\n        {\r\n            props.monsters.map(monster => <Card key={monster.id} monster={monster} />)\r\n        }\r\n    </div>)\r\n}","import React from 'react';\r\nimport './Search-box.styles.css';\r\n\r\nexport const Searchbox = ({ placeholder, handleChange }) => {\r\n    return (\r\n        <input className=\"search\" type=\"text\" placeholder={placeholder} onChange={handleChange} />\r\n    )\r\n}","import React, { Component } from 'react'\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { Searchbox } from './components/Search-box/Search-box.component'\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n\n\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n      .catch(err => console.error(err))\n  }\n\n  handleChange = event => {\n    this.setState({ searchField: event.target.value })\n  }\n\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n    return (\n      <div className=\"App\" >\n        <h1>Monsters Rolodex</h1>\n        <Searchbox placeholder=\"Search Monsters\" handleChange={this.handleChange} />\n        <CardList monsters={filteredMonsters} />\n\n\n\n      </div>\n    )\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}